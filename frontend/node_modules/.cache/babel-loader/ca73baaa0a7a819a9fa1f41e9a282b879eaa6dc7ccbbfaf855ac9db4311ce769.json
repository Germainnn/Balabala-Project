{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwjie\\\\time-blocking-app\\\\frontend\\\\src\\\\components\\\\MonthlyBoard\\\\MonthlyBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MonthlyBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATUSES = ['Not Started', 'In Progress', 'Completed'];\nfunction MonthlyBoard() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    startDate: '',\n    endDate: '',\n    status: 'Not Started',\n    tasks: []\n  });\n  useEffect(() => {\n    // TODO: Load projects from API\n    const mockProjects = [{\n      id: 1,\n      title: 'Website Redesign',\n      description: 'Redesign company website with modern UI',\n      startDate: '2024-03-01',\n      endDate: '2024-03-31',\n      status: 'In Progress',\n      tasks: [{\n        id: 1,\n        title: 'Design mockups',\n        status: 'Completed'\n      }, {\n        id: 2,\n        title: 'Frontend development',\n        status: 'In Progress'\n      }, {\n        id: 3,\n        title: 'Backend integration',\n        status: 'Not Started'\n      }]\n    }, {\n      id: 2,\n      title: 'Mobile App Launch',\n      description: 'Launch new mobile app version',\n      startDate: '2024-03-15',\n      endDate: '2024-04-15',\n      status: 'Not Started',\n      tasks: [{\n        id: 1,\n        title: 'Beta testing',\n        status: 'Not Started'\n      }, {\n        id: 2,\n        title: 'Marketing materials',\n        status: 'Not Started'\n      }]\n    }];\n    setProjects(mockProjects);\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const project = {\n      id: Date.now(),\n      ...newProject,\n      tasks: []\n    };\n    setProjects([...projects, project]);\n    setNewProject({\n      title: '',\n      description: '',\n      startDate: '',\n      endDate: '',\n      status: 'Not Started',\n      tasks: []\n    });\n    setShowAddForm(false);\n  };\n  const addTask = projectId => {\n    const taskTitle = prompt('Enter task title:');\n    if (taskTitle) {\n      setProjects(projects.map(project => {\n        if (project.id === projectId) {\n          return {\n            ...project,\n            tasks: [...project.tasks, {\n              id: Date.now(),\n              title: taskTitle,\n              status: 'Not Started'\n            }]\n          };\n        }\n        return project;\n      }));\n    }\n  };\n  const updateTaskStatus = (projectId, taskId, newStatus) => {\n    setProjects(projects.map(project => {\n      if (project.id === projectId) {\n        return {\n          ...project,\n          tasks: project.tasks.map(task => {\n            if (task.id === taskId) {\n              return {\n                ...task,\n                status: newStatus\n              };\n            }\n            return task;\n          })\n        };\n      }\n      return project;\n    }));\n  };\n  const updateProjectStatus = (projectId, newStatus) => {\n    setProjects(projects.map(project => {\n      if (project.id === projectId) {\n        return {\n          ...project,\n          status: newStatus\n        };\n      }\n      return project;\n    }));\n  };\n  const deleteProject = projectId => {\n    setProjects(projects.filter(project => project.id !== projectId));\n  };\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'completed':\n        return 'var(--status-completed)';\n      case 'in progress':\n        return 'var(--status-in-progress)';\n      default:\n        return 'var(--status-not-started)';\n    }\n  };\n  const calculateProgress = tasks => {\n    if (tasks.length === 0) return 0;\n    const completed = tasks.filter(task => task.status === 'Completed').length;\n    return Math.round(completed / tasks.length * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monthly-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Monthly Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-count\",\n          children: [projects.length, \" projects\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-primary\",\n        onClick: () => setShowAddForm(true),\n        children: \"+ Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-project-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Project Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newProject.title,\n              onChange: e => setNewProject({\n                ...newProject,\n                title: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newProject.status,\n              onChange: e => setNewProject({\n                ...newProject,\n                status: e.target.value\n              }),\n              children: STATUSES.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: status,\n                children: status\n              }, status, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newProject.description,\n            onChange: e => setNewProject({\n              ...newProject,\n              description: e.target.value\n            }),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newProject.startDate,\n              onChange: e => setNewProject({\n                ...newProject,\n                startDate: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newProject.endDate,\n              onChange: e => setNewProject({\n                ...newProject,\n                endDate: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button-primary\",\n            children: \"Create Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button-secondary\",\n            onClick: () => setShowAddForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-grid\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: project.status,\n              onChange: e => updateProjectStatus(project.id, e.target.value),\n              className: \"status-select\",\n              style: {\n                backgroundColor: getStatusColor(project.status)\n              },\n              children: STATUSES.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: status,\n                children: status\n              }, status, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => deleteProject(project.id),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"project-description\",\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-dates\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-label\",\n              children: \"Start:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-value\",\n              children: new Date(project.startDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-label\",\n              children: \"End:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-value\",\n              children: new Date(project.endDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-percentage\",\n              children: [calculateProgress(project.tasks), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${calculateProgress(project.tasks)}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tasks-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-secondary small\",\n              onClick: () => addTask(project.id),\n              children: \"+ Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tasks-list\",\n            children: project.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-title\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: task.status,\n                onChange: e => updateTaskStatus(project.id, task.id, e.target.value),\n                className: \"status-select small\",\n                style: {\n                  backgroundColor: getStatusColor(task.status)\n                },\n                children: STATUSES.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: status,\n                  children: status\n                }, status, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(MonthlyBoard, \"hn1F+xmfy+9LIkTMP/Fdkcg0zZc=\");\n_c = MonthlyBoard;\nexport default MonthlyBoard;\nvar _c;\n$RefreshReg$(_c, \"MonthlyBoard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","STATUSES","MonthlyBoard","_s","projects","setProjects","showAddForm","setShowAddForm","newProject","setNewProject","title","description","startDate","endDate","status","tasks","mockProjects","id","handleSubmit","e","preventDefault","project","Date","now","addTask","projectId","taskTitle","prompt","map","updateTaskStatus","taskId","newStatus","task","updateProjectStatus","deleteProject","filter","getStatusColor","toLowerCase","calculateProgress","length","completed","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","required","rows","style","backgroundColor","toLocaleDateString","width","_c","$RefreshReg$"],"sources":["C:/Users/wwjie/time-blocking-app/frontend/src/components/MonthlyBoard/MonthlyBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MonthlyBoard.css';\r\n\r\nconst STATUSES = ['Not Started', 'In Progress', 'Completed'];\r\n\r\nfunction MonthlyBoard() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    description: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    status: 'Not Started',\r\n    tasks: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    // TODO: Load projects from API\r\n    const mockProjects = [\r\n      {\r\n        id: 1,\r\n        title: 'Website Redesign',\r\n        description: 'Redesign company website with modern UI',\r\n        startDate: '2024-03-01',\r\n        endDate: '2024-03-31',\r\n        status: 'In Progress',\r\n        tasks: [\r\n          { id: 1, title: 'Design mockups', status: 'Completed' },\r\n          { id: 2, title: 'Frontend development', status: 'In Progress' },\r\n          { id: 3, title: 'Backend integration', status: 'Not Started' }\r\n        ]\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Mobile App Launch',\r\n        description: 'Launch new mobile app version',\r\n        startDate: '2024-03-15',\r\n        endDate: '2024-04-15',\r\n        status: 'Not Started',\r\n        tasks: [\r\n          { id: 1, title: 'Beta testing', status: 'Not Started' },\r\n          { id: 2, title: 'Marketing materials', status: 'Not Started' }\r\n        ]\r\n      }\r\n    ];\r\n    setProjects(mockProjects);\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const project = {\r\n      id: Date.now(),\r\n      ...newProject,\r\n      tasks: []\r\n    };\r\n    setProjects([...projects, project]);\r\n    setNewProject({\r\n      title: '',\r\n      description: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      status: 'Not Started',\r\n      tasks: []\r\n    });\r\n    setShowAddForm(false);\r\n  };\r\n\r\n  const addTask = (projectId) => {\r\n    const taskTitle = prompt('Enter task title:');\r\n    if (taskTitle) {\r\n      setProjects(projects.map(project => {\r\n        if (project.id === projectId) {\r\n          return {\r\n            ...project,\r\n            tasks: [\r\n              ...project.tasks,\r\n              {\r\n                id: Date.now(),\r\n                title: taskTitle,\r\n                status: 'Not Started'\r\n              }\r\n            ]\r\n          };\r\n        }\r\n        return project;\r\n      }));\r\n    }\r\n  };\r\n\r\n  const updateTaskStatus = (projectId, taskId, newStatus) => {\r\n    setProjects(projects.map(project => {\r\n      if (project.id === projectId) {\r\n        return {\r\n          ...project,\r\n          tasks: project.tasks.map(task => {\r\n            if (task.id === taskId) {\r\n              return { ...task, status: newStatus };\r\n            }\r\n            return task;\r\n          })\r\n        };\r\n      }\r\n      return project;\r\n    }));\r\n  };\r\n\r\n  const updateProjectStatus = (projectId, newStatus) => {\r\n    setProjects(projects.map(project => {\r\n      if (project.id === projectId) {\r\n        return { ...project, status: newStatus };\r\n      }\r\n      return project;\r\n    }));\r\n  };\r\n\r\n  const deleteProject = (projectId) => {\r\n    setProjects(projects.filter(project => project.id !== projectId));\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'completed':\r\n        return 'var(--status-completed)';\r\n      case 'in progress':\r\n        return 'var(--status-in-progress)';\r\n      default:\r\n        return 'var(--status-not-started)';\r\n    }\r\n  };\r\n\r\n  const calculateProgress = (tasks) => {\r\n    if (tasks.length === 0) return 0;\r\n    const completed = tasks.filter(task => task.status === 'Completed').length;\r\n    return Math.round((completed / tasks.length) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"monthly-board-container\">\r\n      <div className=\"board-header\">\r\n        <div className=\"header-left\">\r\n          <h3>Monthly Projects</h3>\r\n          <div className=\"project-count\">\r\n            {projects.length} projects\r\n          </div>\r\n        </div>\r\n        <button \r\n          className=\"button-primary\"\r\n          onClick={() => setShowAddForm(true)}\r\n        >\r\n          + Add Project\r\n        </button>\r\n      </div>\r\n\r\n      {showAddForm && (\r\n        <div className=\"add-project-form\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label>Project Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newProject.title}\r\n                  onChange={(e) => setNewProject({ ...newProject, title: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Status</label>\r\n                <select\r\n                  value={newProject.status}\r\n                  onChange={(e) => setNewProject({ ...newProject, status: e.target.value })}\r\n                >\r\n                  {STATUSES.map(status => (\r\n                    <option key={status} value={status}>{status}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                value={newProject.description}\r\n                onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label>Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={newProject.startDate}\r\n                  onChange={(e) => setNewProject({ ...newProject, startDate: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={newProject.endDate}\r\n                  onChange={(e) => setNewProject({ ...newProject, endDate: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\" className=\"button-primary\">Create Project</button>\r\n              <button \r\n                type=\"button\" \r\n                className=\"button-secondary\"\r\n                onClick={() => setShowAddForm(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"projects-grid\">\r\n        {projects.map(project => (\r\n          <div key={project.id} className=\"project-card\">\r\n            <div className=\"project-card-header\">\r\n              <div className=\"project-title\">\r\n                <h4>{project.title}</h4>\r\n                <select\r\n                  value={project.status}\r\n                  onChange={(e) => updateProjectStatus(project.id, e.target.value)}\r\n                  className=\"status-select\"\r\n                  style={{ backgroundColor: getStatusColor(project.status) }}\r\n                >\r\n                  {STATUSES.map(status => (\r\n                    <option key={status} value={status}>{status}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button \r\n                className=\"delete-button\"\r\n                onClick={() => deleteProject(project.id)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <p className=\"project-description\">{project.description}</p>\r\n\r\n            <div className=\"project-dates\">\r\n              <div className=\"date-item\">\r\n                <span className=\"date-label\">Start:</span>\r\n                <span className=\"date-value\">{new Date(project.startDate).toLocaleDateString()}</span>\r\n              </div>\r\n              <div className=\"date-item\">\r\n                <span className=\"date-label\">End:</span>\r\n                <span className=\"date-value\">{new Date(project.endDate).toLocaleDateString()}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"progress-section\">\r\n              <div className=\"progress-header\">\r\n                <h5>Progress</h5>\r\n                <span className=\"progress-percentage\">{calculateProgress(project.tasks)}%</span>\r\n              </div>\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\"\r\n                  style={{ width: `${calculateProgress(project.tasks)}%` }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"tasks-section\">\r\n              <div className=\"tasks-header\">\r\n                <h5>Tasks</h5>\r\n                <button \r\n                  className=\"button-secondary small\"\r\n                  onClick={() => addTask(project.id)}\r\n                >\r\n                  + Add Task\r\n                </button>\r\n              </div>\r\n              <div className=\"tasks-list\">\r\n                {project.tasks.map(task => (\r\n                  <div key={task.id} className=\"task-item\">\r\n                    <span className=\"task-title\">{task.title}</span>\r\n                    <select\r\n                      value={task.status}\r\n                      onChange={(e) => updateTaskStatus(project.id, task.id, e.target.value)}\r\n                      className=\"status-select small\"\r\n                      style={{ backgroundColor: getStatusColor(task.status) }}\r\n                    >\r\n                      {STATUSES.map(status => (\r\n                        <option key={status} value={status}>{status}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonthlyBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}