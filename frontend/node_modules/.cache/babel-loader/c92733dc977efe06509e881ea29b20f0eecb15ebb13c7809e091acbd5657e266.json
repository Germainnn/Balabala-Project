{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./TimeBlocking.css';import{getTimeBlocks,createTimeBlock,updateTimeBlock,deleteTimeBlock}from'../../utils/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TimeBlockingCalendar=()=>{const[selectedDate,setSelectedDate]=useState(new Date());const[view,setView]=useState('week');// 'day', 'week', 'month'\nconst[blocks,setBlocks]=useState([]);const[showAddForm,setShowAddForm]=useState(false);const[selectedTimeRange,setSelectedTimeRange]=useState({startTime:'',endTime:''});const[newBlock,setNewBlock]=useState({startTime:'',endTime:'',title:'',description:'',category:'academic',priority:'high',isRecurring:false,recurringType:'none',// 'none', 'daily', 'weekly', 'monthly'\nrecurringEndDate:''});const categories={academic:{label:'Academic',color:'#4285F4'},personal:{label:'Personal',color:'#0F9D58'},work:{label:'Work',color:'#DB4437'},project:{label:'Project',color:'#F4B400'}};const priorities={high:{label:'High Priority',color:'#ff4444'},medium:{label:'Medium Priority',color:'#ffbb33'},low:{label:'Low Priority',color:'#00c851'}};const recurringTypes=[{value:'none',label:'Not recurring'},{value:'daily',label:'Daily'},{value:'weekly',label:'Weekly'},{value:'monthly',label:'Monthly'}];useEffect(()=>{loadTimeBlocks();},[selectedDate]);const loadTimeBlocks=async()=>{try{const blocks=await getTimeBlocks();setBlocks(blocks);}catch(error){console.error('Error loading time blocks:',error);}};const handleSubmit=async e=>{e.preventDefault();try{const blockData={...newBlock,date:selectedDate.toISOString().split('T')[0],startTime:selectedTimeRange.startTime,endTime:selectedTimeRange.endTime};await createTimeBlock(blockData);setShowAddForm(false);setNewBlock({startTime:'',endTime:'',title:'',description:'',category:'academic',priority:'high',isRecurring:false,recurringType:'none',recurringEndDate:''});setSelectedTimeRange({startTime:'',endTime:''});loadTimeBlocks();}catch(error){console.error('Error creating time block:',error);}};const handleDelete=async id=>{try{await deleteTimeBlock(id);loadTimeBlocks();}catch(error){console.error('Error deleting time block:',error);}};const generateTimeSlots=()=>{const slots=[];for(let i=0;i<24;i++){const hour=i.toString().padStart(2,'0');slots.push(`${hour}:00`);slots.push(`${hour}:30`);}return slots;};const timeSlots=generateTimeSlots();const formatDate=date=>{return date.toLocaleDateString('en-US',{weekday:'long',year:'numeric',month:'long',day:'numeric'});};const formatMonthYear=date=>{return date.toLocaleDateString('en-US',{month:'long',year:'numeric'});};const getDaysInWeek=()=>{const days=[];const currentDate=new Date(selectedDate);currentDate.setDate(currentDate.getDate()-currentDate.getDay());for(let i=0;i<7;i++){const newDate=new Date(currentDate);newDate.setDate(currentDate.getDate()+i);days.push(newDate);}return days;};const getDaysInMonth=date=>{const year=date.getFullYear();const month=date.getMonth();const firstDay=new Date(year,month,1);const lastDay=new Date(year,month+1,0);const days=[];// Add padding days from previous month\nconst firstDayOfWeek=firstDay.getDay();for(let i=0;i<firstDayOfWeek;i++){const prevDate=new Date(year,month,-i);days.unshift(prevDate);}// Add days of current month\nfor(let i=1;i<=lastDay.getDate();i++){days.push(new Date(year,month,i));}// Add padding days from next month to complete the grid\nconst remainingDays=42-days.length;// 6 rows of 7 days\nfor(let i=1;i<=remainingDays;i++){days.push(new Date(year,month+1,i));}return days;};const getBlocksForDateAndTime=(date,timeSlot)=>{return blocks.filter(block=>{const blockDate=new Date(block.date);return blockDate.getDate()===date.getDate()&&blockDate.getMonth()===date.getMonth()&&blockDate.getFullYear()===date.getFullYear()&&block.startTime<=timeSlot&&block.endTime>timeSlot;});};const getBlocksForDay=date=>{return blocks.filter(block=>{const blockDate=new Date(block.date);return blockDate.getDate()===date.getDate()&&blockDate.getMonth()===date.getMonth()&&blockDate.getFullYear()===date.getFullYear();});};const getBlocksForDayView=()=>{return getBlocksForDay(selectedDate);};const isToday=date=>{const today=new Date();return date.getDate()===today.getDate()&&date.getMonth()===today.getMonth()&&date.getFullYear()===today.getFullYear();};const isCurrentMonth=date=>{return date.getMonth()===selectedDate.getMonth();};const isSelected=date=>{return date.getDate()===selectedDate.getDate()&&date.getMonth()===selectedDate.getMonth()&&date.getFullYear()===selectedDate.getFullYear();};const handleTimeSlotClick=(date,startTime)=>{setSelectedDate(date);setSelectedTimeRange(prev=>({startTime:startTime,endTime:prev.endTime||startTime}));setShowAddForm(true);};const handleDateClick=date=>{setSelectedDate(date);};const navigate=direction=>{const newDate=new Date(selectedDate);if(view==='day'){newDate.setDate(newDate.getDate()+direction);}else if(view==='week'){newDate.setDate(newDate.getDate()+7*direction);}else if(view==='month'){newDate.setMonth(newDate.getMonth()+direction);}setSelectedDate(newDate);};const renderDayView=()=>{const dayBlocks=getBlocksForDayView();return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-grid day-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-slots-column\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-header\"}),timeSlots.map(slot=>/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-label\",children:slot},slot))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"day-column full-width\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"day-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"day-name\",children:selectedDate.toLocaleDateString('en-US',{weekday:'long'})}),/*#__PURE__*/_jsx(\"div\",{className:\"day-date\",children:selectedDate.getDate()})]}),timeSlots.map((slot,slotIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"time-slot\",onClick:()=>handleTimeSlotClick(selectedDate,slot),children:getBlocksForDateAndTime(selectedDate,slot).map((block,index)=>{var _categories$block$cat,_priorities$block$pri;return/*#__PURE__*/_jsxs(\"div\",{className:\"time-block\",style:{backgroundColor:((_categories$block$cat=categories[block.category])===null||_categories$block$cat===void 0?void 0:_categories$block$cat.color)||'#4285F4',borderLeft:`4px solid ${((_priorities$block$pri=priorities[block.priority])===null||_priorities$block$pri===void 0?void 0:_priorities$block$pri.color)||'#ff4444'}`},children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-title\",children:block.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-time\",children:[block.startTime,\" - \",block.endTime]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();handleDelete(block.id);},className:\"delete-block\",children:\"\\xD7\"})]},index);})},slotIndex))]})]});};const renderWeekView=()=>{const weekDays=getDaysInWeek();return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-grid week-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-slots-column\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-header\"}),timeSlots.map(slot=>/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-label\",children:slot},slot))]}),weekDays.map((day,dayIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:`day-column ${isToday(day)?'today':''} ${isSelected(day)?'selected':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"day-header\",onClick:()=>handleDateClick(day),children:[/*#__PURE__*/_jsx(\"div\",{className:\"day-name\",children:day.toLocaleDateString('en-US',{weekday:'short'})}),/*#__PURE__*/_jsx(\"div\",{className:\"day-date\",children:day.getDate()})]}),timeSlots.map((slot,slotIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"time-slot\",onClick:()=>handleTimeSlotClick(day,slot),children:getBlocksForDateAndTime(day,slot).map((block,index)=>{var _categories$block$cat2,_priorities$block$pri2;return/*#__PURE__*/_jsxs(\"div\",{className:\"time-block\",style:{backgroundColor:((_categories$block$cat2=categories[block.category])===null||_categories$block$cat2===void 0?void 0:_categories$block$cat2.color)||'#4285F4',borderLeft:`4px solid ${((_priorities$block$pri2=priorities[block.priority])===null||_priorities$block$pri2===void 0?void 0:_priorities$block$pri2.color)||'#ff4444'}`},children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-title\",children:block.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-time\",children:[block.startTime,\" - \",block.endTime]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();handleDelete(block.id);},className:\"delete-block\",children:\"\\xD7\"})]},index);})},`${dayIndex}-${slotIndex}`))]},dayIndex))]});};const renderMonthView=()=>{const days=getDaysInMonth(selectedDate);const weekDays=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-grid month-view\",children:[weekDays.map(day=>/*#__PURE__*/_jsx(\"div\",{className:\"weekday-header\",children:day},day)),days.map((date,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`calendar-day ${isToday(date)?'today':''} ${isSelected(date)?'selected':''} ${!isCurrentMonth(date)?'other-month':''}`,onClick:()=>handleDateClick(date),children:[/*#__PURE__*/_jsx(\"div\",{className:\"day-header\",children:/*#__PURE__*/_jsx(\"span\",{className:\"day-number\",children:date.getDate()})}),/*#__PURE__*/_jsxs(\"div\",{className:\"day-blocks\",children:[getBlocksForDay(date).slice(0,3).map((block,i)=>{var _categories$block$cat3,_priorities$block$pri3;return/*#__PURE__*/_jsxs(\"div\",{className:\"time-block-month\",style:{backgroundColor:((_categories$block$cat3=categories[block.category])===null||_categories$block$cat3===void 0?void 0:_categories$block$cat3.color)||'#4285F4',borderLeft:`4px solid ${((_priorities$block$pri3=priorities[block.priority])===null||_priorities$block$pri3===void 0?void 0:_priorities$block$pri3.color)||'#ff4444'}`},children:[/*#__PURE__*/_jsx(\"span\",{className:\"block-time-month\",children:block.startTime}),/*#__PURE__*/_jsx(\"span\",{className:\"block-title-month\",children:block.title})]},i);}),getBlocksForDay(date).length>3&&/*#__PURE__*/_jsxs(\"div\",{className:\"more-blocks\",children:[\"+\",getBlocksForDay(date).length-3,\" more\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"add-block-button\",onClick:e=>{e.stopPropagation();setSelectedDate(date);setShowAddForm(true);},children:\"+\"})]},index))]});};const renderView=()=>{switch(view){case'day':return renderDayView();case'week':return renderWeekView();case'month':return renderMonthView();default:return renderWeekView();}};const getNavButtonText=()=>{switch(view){case'day':return{prev:'Previous Day',next:'Next Day'};case'week':return{prev:'Previous Week',next:'Next Week'};case'month':return{prev:'Previous Month',next:'Next Month'};default:return{prev:'Previous',next:'Next'};}};const getHeaderText=()=>{switch(view){case'day':return formatDate(selectedDate);case'week':const weekDays=getDaysInWeek();const startDate=weekDays[0].toLocaleDateString('en-US',{month:'short',day:'numeric'});const endDate=weekDays[6].toLocaleDateString('en-US',{month:'short',day:'numeric',year:'numeric'});return`${startDate} - ${endDate}`;case'month':return formatMonthYear(selectedDate);default:return formatDate(selectedDate);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"time-blocking-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:getHeaderText()}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:view==='day'?'active':'',onClick:()=>setView('day'),children:\"Day\"}),/*#__PURE__*/_jsx(\"button\",{className:view==='week'?'active':'',onClick:()=>setView('week'),children:\"Week\"}),/*#__PURE__*/_jsx(\"button\",{className:view==='month'?'active':'',onClick:()=>setView('month'),children:\"Month\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(-1),children:getNavButtonText().prev}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedDate(new Date()),children:\"Today\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(1),children:getNavButtonText().next})]})]}),renderView(),showAddForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"add-block-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add New Time Block\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:selectedDate.toISOString().split('T')[0],onChange:e=>{const newDate=new Date(e.target.value);setSelectedDate(newDate);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Time Range\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-range-inputs\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedTimeRange.startTime,onChange:e=>setSelectedTimeRange(prev=>({...prev,startTime:e.target.value})),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Start Time\"}),timeSlots.map(slot=>/*#__PURE__*/_jsx(\"option\",{value:slot,children:slot},slot))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedTimeRange.endTime,onChange:e=>setSelectedTimeRange(prev=>({...prev,endTime:e.target.value})),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"End Time\"}),timeSlots.map(slot=>/*#__PURE__*/_jsx(\"option\",{value:slot,children:slot},slot))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newBlock.title,onChange:e=>setNewBlock(prev=>({...prev,title:e.target.value})),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newBlock.description,onChange:e=>setNewBlock(prev=>({...prev,description:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category\"}),/*#__PURE__*/_jsx(\"select\",{value:newBlock.category,onChange:e=>setNewBlock(prev=>({...prev,category:e.target.value})),required:true,children:Object.entries(categories).map(_ref=>{let[key,{label}]=_ref;return/*#__PURE__*/_jsx(\"option\",{value:key,children:label},key);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Priority\"}),/*#__PURE__*/_jsx(\"select\",{value:newBlock.priority,onChange:e=>setNewBlock(prev=>({...prev,priority:e.target.value})),required:true,children:Object.entries(priorities).map(_ref2=>{let[key,{label}]=_ref2;return/*#__PURE__*/_jsx(\"option\",{value:key,children:label},key);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group recurring-container\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:newBlock.isRecurring,onChange:e=>setNewBlock(prev=>({...prev,isRecurring:e.target.checked,recurringType:e.target.checked?'daily':'none'}))}),\"Recurring Task\"]}),newBlock.isRecurring&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recurring-options\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Recurrence\"}),/*#__PURE__*/_jsx(\"select\",{value:newBlock.recurringType,onChange:e=>setNewBlock(prev=>({...prev,recurringType:e.target.value})),children:recurringTypes.slice(1).map(type=>/*#__PURE__*/_jsx(\"option\",{value:type.value,children:type.label},type.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recurring-end\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"End Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:newBlock.recurringEndDate,onChange:e=>setNewBlock(prev=>({...prev,recurringEndDate:e.target.value})),min:new Date().toISOString().split('T')[0]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save Block\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowAddForm(false),children:\"Cancel\"})]})]})]})]});};export default TimeBlockingCalendar;","map":{"version":3,"names":["React","useState","useEffect","getTimeBlocks","createTimeBlock","updateTimeBlock","deleteTimeBlock","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TimeBlockingCalendar","selectedDate","setSelectedDate","Date","view","setView","blocks","setBlocks","showAddForm","setShowAddForm","selectedTimeRange","setSelectedTimeRange","startTime","endTime","newBlock","setNewBlock","title","description","category","priority","isRecurring","recurringType","recurringEndDate","categories","academic","label","color","personal","work","project","priorities","high","medium","low","recurringTypes","value","loadTimeBlocks","error","console","handleSubmit","e","preventDefault","blockData","date","toISOString","split","handleDelete","id","generateTimeSlots","slots","i","hour","toString","padStart","push","timeSlots","formatDate","toLocaleDateString","weekday","year","month","day","formatMonthYear","getDaysInWeek","days","currentDate","setDate","getDate","getDay","newDate","getDaysInMonth","getFullYear","getMonth","firstDay","lastDay","firstDayOfWeek","prevDate","unshift","remainingDays","length","getBlocksForDateAndTime","timeSlot","filter","block","blockDate","getBlocksForDay","getBlocksForDayView","isToday","today","isCurrentMonth","isSelected","handleTimeSlotClick","prev","handleDateClick","navigate","direction","setMonth","renderDayView","dayBlocks","className","children","map","slot","slotIndex","onClick","index","_categories$block$cat","_priorities$block$pri","style","backgroundColor","borderLeft","stopPropagation","renderWeekView","weekDays","dayIndex","_categories$block$cat2","_priorities$block$pri2","renderMonthView","slice","_categories$block$cat3","_priorities$block$pri3","renderView","getNavButtonText","next","getHeaderText","startDate","endDate","onSubmit","type","onChange","target","required","Object","entries","_ref","key","_ref2","checked","min"],"sources":["C:/Users/wwjie/time-blocking-app/frontend/src/components/TimeBlocking/TimeBlockingCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TimeBlocking.css';\r\nimport { getTimeBlocks, createTimeBlock, updateTimeBlock, deleteTimeBlock } from '../../utils/api';\r\n\r\nconst TimeBlockingCalendar = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [view, setView] = useState('week'); // 'day', 'week', 'month'\r\n  const [blocks, setBlocks] = useState([]);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [selectedTimeRange, setSelectedTimeRange] = useState({\r\n    startTime: '',\r\n    endTime: ''\r\n  });\r\n  const [newBlock, setNewBlock] = useState({\r\n    startTime: '',\r\n    endTime: '',\r\n    title: '',\r\n    description: '',\r\n    category: 'academic',\r\n    priority: 'high',\r\n    isRecurring: false,\r\n    recurringType: 'none', // 'none', 'daily', 'weekly', 'monthly'\r\n    recurringEndDate: ''\r\n  });\r\n\r\n  const categories = {\r\n    academic: { label: 'Academic', color: '#4285F4' },\r\n    personal: { label: 'Personal', color: '#0F9D58' },\r\n    work: { label: 'Work', color: '#DB4437' },\r\n    project: { label: 'Project', color: '#F4B400' }\r\n  };\r\n\r\n  const priorities = {\r\n    high: { label: 'High Priority', color: '#ff4444' },\r\n    medium: { label: 'Medium Priority', color: '#ffbb33' },\r\n    low: { label: 'Low Priority', color: '#00c851' }\r\n  };\r\n\r\n  const recurringTypes = [\r\n    { value: 'none', label: 'Not recurring' },\r\n    { value: 'daily', label: 'Daily' },\r\n    { value: 'weekly', label: 'Weekly' },\r\n    { value: 'monthly', label: 'Monthly' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadTimeBlocks();\r\n  }, [selectedDate]);\r\n\r\n  const loadTimeBlocks = async () => {\r\n    try {\r\n      const blocks = await getTimeBlocks();\r\n      setBlocks(blocks);\r\n    } catch (error) {\r\n      console.error('Error loading time blocks:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const blockData = {\r\n        ...newBlock,\r\n        date: selectedDate.toISOString().split('T')[0],\r\n        startTime: selectedTimeRange.startTime,\r\n        endTime: selectedTimeRange.endTime\r\n      };\r\n      \r\n      await createTimeBlock(blockData);\r\n      setShowAddForm(false);\r\n      setNewBlock({\r\n        startTime: '',\r\n        endTime: '',\r\n        title: '',\r\n        description: '',\r\n        category: 'academic',\r\n        priority: 'high',\r\n        isRecurring: false,\r\n        recurringType: 'none',\r\n        recurringEndDate: ''\r\n      });\r\n      setSelectedTimeRange({ startTime: '', endTime: '' });\r\n      loadTimeBlocks();\r\n    } catch (error) {\r\n      console.error('Error creating time block:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteTimeBlock(id);\r\n      loadTimeBlocks();\r\n    } catch (error) {\r\n      console.error('Error deleting time block:', error);\r\n    }\r\n  };\r\n\r\n  const generateTimeSlots = () => {\r\n    const slots = [];\r\n    for (let i = 0; i < 24; i++) {\r\n      const hour = i.toString().padStart(2, '0');\r\n      slots.push(`${hour}:00`);\r\n      slots.push(`${hour}:30`);\r\n    }\r\n    return slots;\r\n  };\r\n\r\n  const timeSlots = generateTimeSlots();\r\n\r\n  const formatDate = (date) => {\r\n    return date.toLocaleDateString('en-US', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatMonthYear = (date) => {\r\n    return date.toLocaleDateString('en-US', {\r\n      month: 'long',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const getDaysInWeek = () => {\r\n    const days = [];\r\n    const currentDate = new Date(selectedDate);\r\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      const newDate = new Date(currentDate);\r\n      newDate.setDate(currentDate.getDate() + i);\r\n      days.push(newDate);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  const getDaysInMonth = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const firstDay = new Date(year, month, 1);\r\n    const lastDay = new Date(year, month + 1, 0);\r\n    const days = [];\r\n\r\n    // Add padding days from previous month\r\n    const firstDayOfWeek = firstDay.getDay();\r\n    for (let i = 0; i < firstDayOfWeek; i++) {\r\n      const prevDate = new Date(year, month, -i);\r\n      days.unshift(prevDate);\r\n    }\r\n\r\n    // Add days of current month\r\n    for (let i = 1; i <= lastDay.getDate(); i++) {\r\n      days.push(new Date(year, month, i));\r\n    }\r\n\r\n    // Add padding days from next month to complete the grid\r\n    const remainingDays = 42 - days.length; // 6 rows of 7 days\r\n    for (let i = 1; i <= remainingDays; i++) {\r\n      days.push(new Date(year, month + 1, i));\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  const getBlocksForDateAndTime = (date, timeSlot) => {\r\n    return blocks.filter(block => {\r\n      const blockDate = new Date(block.date);\r\n      return blockDate.getDate() === date.getDate() &&\r\n        blockDate.getMonth() === date.getMonth() &&\r\n        blockDate.getFullYear() === date.getFullYear() &&\r\n        block.startTime <= timeSlot &&\r\n        block.endTime > timeSlot;\r\n    });\r\n  };\r\n\r\n  const getBlocksForDay = (date) => {\r\n    return blocks.filter(block => {\r\n      const blockDate = new Date(block.date);\r\n      return blockDate.getDate() === date.getDate() &&\r\n        blockDate.getMonth() === date.getMonth() &&\r\n        blockDate.getFullYear() === date.getFullYear();\r\n    });\r\n  };\r\n\r\n  const getBlocksForDayView = () => {\r\n    return getBlocksForDay(selectedDate);\r\n  };\r\n\r\n  const isToday = (date) => {\r\n    const today = new Date();\r\n    return date.getDate() === today.getDate() &&\r\n      date.getMonth() === today.getMonth() &&\r\n      date.getFullYear() === today.getFullYear();\r\n  };\r\n\r\n  const isCurrentMonth = (date) => {\r\n    return date.getMonth() === selectedDate.getMonth();\r\n  };\r\n\r\n  const isSelected = (date) => {\r\n    return date.getDate() === selectedDate.getDate() &&\r\n      date.getMonth() === selectedDate.getMonth() &&\r\n      date.getFullYear() === selectedDate.getFullYear();\r\n  };\r\n\r\n  const handleTimeSlotClick = (date, startTime) => {\r\n    setSelectedDate(date);\r\n    setSelectedTimeRange(prev => ({\r\n      startTime: startTime,\r\n      endTime: prev.endTime || startTime\r\n    }));\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  const handleDateClick = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const navigate = (direction) => {\r\n    const newDate = new Date(selectedDate);\r\n    \r\n    if (view === 'day') {\r\n      newDate.setDate(newDate.getDate() + direction);\r\n    } else if (view === 'week') {\r\n      newDate.setDate(newDate.getDate() + (7 * direction));\r\n    } else if (view === 'month') {\r\n      newDate.setMonth(newDate.getMonth() + direction);\r\n    }\r\n    \r\n    setSelectedDate(newDate);\r\n  };\r\n\r\n  const renderDayView = () => {\r\n    const dayBlocks = getBlocksForDayView();\r\n    \r\n    return (\r\n      <div className=\"calendar-grid day-view\">\r\n        <div className=\"time-slots-column\">\r\n          <div className=\"time-slot-header\"></div>\r\n          {timeSlots.map(slot => (\r\n            <div key={slot} className=\"time-slot-label\">{slot}</div>\r\n          ))}\r\n        </div>\r\n        <div className=\"day-column full-width\">\r\n          <div className=\"day-header\">\r\n            <div className=\"day-name\">{selectedDate.toLocaleDateString('en-US', { weekday: 'long' })}</div>\r\n            <div className=\"day-date\">{selectedDate.getDate()}</div>\r\n          </div>\r\n          {timeSlots.map((slot, slotIndex) => (\r\n            <div\r\n              key={slotIndex}\r\n              className=\"time-slot\"\r\n              onClick={() => handleTimeSlotClick(selectedDate, slot)}\r\n            >\r\n              {getBlocksForDateAndTime(selectedDate, slot).map((block, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"time-block\"\r\n                  style={{\r\n                    backgroundColor: categories[block.category]?.color || '#4285F4',\r\n                    borderLeft: `4px solid ${priorities[block.priority]?.color || '#ff4444'}`\r\n                  }}\r\n                >\r\n                  <div className=\"block-title\">{block.title}</div>\r\n                  <div className=\"block-time\">\r\n                    {block.startTime} - {block.endTime}\r\n                  </div>\r\n                  <button \r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDelete(block.id);\r\n                    }} \r\n                    className=\"delete-block\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderWeekView = () => {\r\n    const weekDays = getDaysInWeek();\r\n\r\n    return (\r\n      <div className=\"calendar-grid week-view\">\r\n        <div className=\"time-slots-column\">\r\n          <div className=\"time-slot-header\"></div>\r\n          {timeSlots.map(slot => (\r\n            <div key={slot} className=\"time-slot-label\">{slot}</div>\r\n          ))}\r\n        </div>\r\n        {weekDays.map((day, dayIndex) => (\r\n          <div \r\n            key={dayIndex} \r\n            className={`day-column ${isToday(day) ? 'today' : ''} ${isSelected(day) ? 'selected' : ''}`}\r\n          >\r\n            <div className=\"day-header\" onClick={() => handleDateClick(day)}>\r\n              <div className=\"day-name\">{day.toLocaleDateString('en-US', { weekday: 'short' })}</div>\r\n              <div className=\"day-date\">{day.getDate()}</div>\r\n            </div>\r\n            {timeSlots.map((slot, slotIndex) => (\r\n              <div\r\n                key={`${dayIndex}-${slotIndex}`}\r\n                className=\"time-slot\"\r\n                onClick={() => handleTimeSlotClick(day, slot)}\r\n              >\r\n                {getBlocksForDateAndTime(day, slot).map((block, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"time-block\"\r\n                    style={{\r\n                      backgroundColor: categories[block.category]?.color || '#4285F4',\r\n                      borderLeft: `4px solid ${priorities[block.priority]?.color || '#ff4444'}`\r\n                    }}\r\n                  >\r\n                    <div className=\"block-title\">{block.title}</div>\r\n                    <div className=\"block-time\">\r\n                      {block.startTime} - {block.endTime}\r\n                    </div>\r\n                    <button \r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleDelete(block.id);\r\n                      }} \r\n                      className=\"delete-block\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderMonthView = () => {\r\n    const days = getDaysInMonth(selectedDate);\r\n    const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n    return (\r\n      <div className=\"calendar-grid month-view\">\r\n        {weekDays.map(day => (\r\n          <div key={day} className=\"weekday-header\">{day}</div>\r\n        ))}\r\n        {days.map((date, index) => (\r\n          <div\r\n            key={index}\r\n            className={`calendar-day ${isToday(date) ? 'today' : ''} ${isSelected(date) ? 'selected' : ''} ${!isCurrentMonth(date) ? 'other-month' : ''}`}\r\n            onClick={() => handleDateClick(date)}\r\n          >\r\n            <div className=\"day-header\">\r\n              <span className=\"day-number\">{date.getDate()}</span>\r\n            </div>\r\n            <div className=\"day-blocks\">\r\n              {getBlocksForDay(date).slice(0, 3).map((block, i) => (\r\n                <div \r\n                  key={i} \r\n                  className=\"time-block-month\" \r\n                  style={{ \r\n                    backgroundColor: categories[block.category]?.color || '#4285F4',\r\n                    borderLeft: `4px solid ${priorities[block.priority]?.color || '#ff4444'}`\r\n                  }}\r\n                >\r\n                  <span className=\"block-time-month\">{block.startTime}</span>\r\n                  <span className=\"block-title-month\">{block.title}</span>\r\n                </div>\r\n              ))}\r\n              {getBlocksForDay(date).length > 3 && (\r\n                <div className=\"more-blocks\">+{getBlocksForDay(date).length - 3} more</div>\r\n              )}\r\n            </div>\r\n            <button\r\n              className=\"add-block-button\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelectedDate(date);\r\n                setShowAddForm(true);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderView = () => {\r\n    switch (view) {\r\n      case 'day':\r\n        return renderDayView();\r\n      case 'week':\r\n        return renderWeekView();\r\n      case 'month':\r\n        return renderMonthView();\r\n      default:\r\n        return renderWeekView();\r\n    }\r\n  };\r\n\r\n  const getNavButtonText = () => {\r\n    switch (view) {\r\n      case 'day':\r\n        return { prev: 'Previous Day', next: 'Next Day' };\r\n      case 'week':\r\n        return { prev: 'Previous Week', next: 'Next Week' };\r\n      case 'month':\r\n        return { prev: 'Previous Month', next: 'Next Month' };\r\n      default:\r\n        return { prev: 'Previous', next: 'Next' };\r\n    }\r\n  };\r\n\r\n  const getHeaderText = () => {\r\n    switch (view) {\r\n      case 'day':\r\n        return formatDate(selectedDate);\r\n      case 'week':\r\n        const weekDays = getDaysInWeek();\r\n        const startDate = weekDays[0].toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n        const endDate = weekDays[6].toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n        return `${startDate} - ${endDate}`;\r\n      case 'month':\r\n        return formatMonthYear(selectedDate);\r\n      default:\r\n        return formatDate(selectedDate);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"time-blocking-container\">\r\n      <div className=\"calendar-header\">\r\n        <h2>{getHeaderText()}</h2>\r\n        <div className=\"view-controls\">\r\n          <button \r\n            className={view === 'day' ? 'active' : ''} \r\n            onClick={() => setView('day')}\r\n          >\r\n            Day\r\n          </button>\r\n          <button \r\n            className={view === 'week' ? 'active' : ''} \r\n            onClick={() => setView('week')}\r\n          >\r\n            Week\r\n          </button>\r\n          <button \r\n            className={view === 'month' ? 'active' : ''} \r\n            onClick={() => setView('month')}\r\n          >\r\n            Month\r\n          </button>\r\n        </div>\r\n        <div className=\"calendar-controls\">\r\n          <button onClick={() => navigate(-1)}>\r\n            {getNavButtonText().prev}\r\n          </button>\r\n          <button onClick={() => setSelectedDate(new Date())}>\r\n            Today\r\n          </button>\r\n          <button onClick={() => navigate(1)}>\r\n            {getNavButtonText().next}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {renderView()}\r\n\r\n      {showAddForm && (\r\n        <div className=\"add-block-form\">\r\n          <h3>Add New Time Block</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Date</label>\r\n              <input \r\n                type=\"date\" \r\n                value={selectedDate.toISOString().split('T')[0]} \r\n                onChange={(e) => {\r\n                  const newDate = new Date(e.target.value);\r\n                  setSelectedDate(newDate);\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Time Range</label>\r\n              <div className=\"time-range-inputs\">\r\n                <select\r\n                  value={selectedTimeRange.startTime}\r\n                  onChange={(e) => setSelectedTimeRange(prev => ({ ...prev, startTime: e.target.value }))}\r\n                  required\r\n                >\r\n                  <option value=\"\">Start Time</option>\r\n                  {timeSlots.map(slot => (\r\n                    <option key={slot} value={slot}>{slot}</option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  value={selectedTimeRange.endTime}\r\n                  onChange={(e) => setSelectedTimeRange(prev => ({ ...prev, endTime: e.target.value }))}\r\n                  required\r\n                >\r\n                  <option value=\"\">End Time</option>\r\n                  {timeSlots.map(slot => (\r\n                    <option key={slot} value={slot}>{slot}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Title</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newBlock.title}\r\n                onChange={(e) => setNewBlock(prev => ({ ...prev, title: e.target.value }))}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                value={newBlock.description}\r\n                onChange={(e) => setNewBlock(prev => ({ ...prev, description: e.target.value }))}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                value={newBlock.category}\r\n                onChange={(e) => setNewBlock(prev => ({ ...prev, category: e.target.value }))}\r\n                required\r\n              >\r\n                {Object.entries(categories).map(([key, { label }]) => (\r\n                  <option key={key} value={key}>{label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Priority</label>\r\n              <select\r\n                value={newBlock.priority}\r\n                onChange={(e) => setNewBlock(prev => ({ ...prev, priority: e.target.value }))}\r\n                required\r\n              >\r\n                {Object.entries(priorities).map(([key, { label }]) => (\r\n                  <option key={key} value={key}>{label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group recurring-container\">\r\n              <label className=\"checkbox-label\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  checked={newBlock.isRecurring} \r\n                  onChange={(e) => setNewBlock(prev => ({ \r\n                    ...prev, \r\n                    isRecurring: e.target.checked,\r\n                    recurringType: e.target.checked ? 'daily' : 'none'\r\n                  }))}\r\n                />\r\n                Recurring Task\r\n              </label>\r\n              \r\n              {newBlock.isRecurring && (\r\n                <>\r\n                  <div className=\"recurring-options\">\r\n                    <label>Recurrence</label>\r\n                    <select\r\n                      value={newBlock.recurringType}\r\n                      onChange={(e) => setNewBlock(prev => ({ ...prev, recurringType: e.target.value }))}\r\n                    >\r\n                      {recurringTypes.slice(1).map(type => (\r\n                        <option key={type.value} value={type.value}>{type.label}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"recurring-end\">\r\n                    <label>End Date</label>\r\n                    <input \r\n                      type=\"date\" \r\n                      value={newBlock.recurringEndDate}\r\n                      onChange={(e) => setNewBlock(prev => ({ ...prev, recurringEndDate: e.target.value }))}\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\">Save Block</button>\r\n              <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeBlockingCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}