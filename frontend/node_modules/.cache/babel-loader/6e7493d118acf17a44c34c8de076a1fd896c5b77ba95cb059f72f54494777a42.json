{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./PomodoroTimer.css';import{createPomodoroSession,getPomodoroSessions}from'../../utils/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PomodoroTimer=()=>{const[timeLeft,setTimeLeft]=useState(25*60);// 25 minutes in seconds\nconst[isRunning,setIsRunning]=useState(false);const[isBreak,setIsBreak]=useState(false);const[sessions,setSessions]=useState(0);const[completedSessions,setCompletedSessions]=useState([]);const[sessionSetting,setSessionSetting]=useState({pomodoro:25,shortBreak:5,longBreak:15});// Load previously completed sessions\nuseEffect(()=>{fetchCompletedSessions();},[]);const fetchCompletedSessions=async()=>{try{const sessions=await getPomodoroSessions();setCompletedSessions(sessions);// Update sessions based on completed sessions\nif(sessions.length>0){setSessions(sessions.length);}}catch(error){console.error('Error fetching pomodoro sessions:',error);}};useEffect(()=>{let timer;if(isRunning&&timeLeft>0){timer=setInterval(()=>{setTimeLeft(prev=>prev-1);},1000);}else if(timeLeft===0){handleTimerComplete();}return()=>clearInterval(timer);},[isRunning,timeLeft]);const handleTimerComplete=async()=>{setIsRunning(false);if(!isBreak){setSessions(prev=>prev+1);try{await createPomodoroSession({duration:25,type:'pomodoro',completedAt:new Date()});}catch(error){console.error('Error saving pomodoro session:',error);}}setIsBreak(!isBreak);setTimeLeft(isBreak?25*60:5*60);};const toggleTimer=()=>{setIsRunning(!isRunning);};const resetTimer=()=>{setIsRunning(false);setIsBreak(false);setTimeLeft(25*60);};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return`${mins.toString().padStart(2,'0')}:${secs.toString().padStart(2,'0')}`;};const handleSettingChange=e=>{const{name,value}=e.target;setSessionSetting({...sessionSetting,[name]:parseInt(value,10)});// Update current timer if matching the current mode\nif(name==='pomodoro'&&!isRunning){setTimeLeft(parseInt(value,10)*60);}};// Calculate statistics\nconst totalPomodoroTime=completedSessions.filter(session=>session.type==='pomodoro').reduce((total,session)=>total+session.duration,0);const todayCompletedPomodoros=completedSessions.filter(session=>{const sessionDate=new Date(session.completedAt);const today=new Date();return session.type==='pomodoro'&&sessionDate.getDate()===today.getDate()&&sessionDate.getMonth()===today.getMonth()&&sessionDate.getFullYear()===today.getFullYear();}).length;return/*#__PURE__*/_jsxs(\"div\",{className:\"pomodoro-timer\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pomodoro Timer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-display\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"time\",children:formatTime(timeLeft)}),/*#__PURE__*/_jsx(\"div\",{className:\"timer-label\",children:isBreak?'Break Time':'Focus Time'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleTimer,children:isRunning?'Pause':'Start'}),/*#__PURE__*/_jsx(\"button\",{onClick:resetTimer,children:\"Reset\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"session-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Completed Sessions: \",sessions]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Today's completed pomodoros: \",todayCompletedPomodoros]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total focus time: \",Math.floor(totalPomodoroTime/60),\" hours \",totalPomodoroTime%60,\" minutes\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-settings\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Timer Settings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-form\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pomodoro\",children:\"Pomodoro (minutes):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"pomodoro\",name:\"pomodoro\",min:\"1\",max:\"60\",value:sessionSetting.pomodoro,onChange:handleSettingChange,disabled:isRunning})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"shortBreak\",children:\"Short Break (minutes):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"shortBreak\",name:\"shortBreak\",min:\"1\",max:\"30\",value:sessionSetting.shortBreak,onChange:handleSettingChange,disabled:isRunning})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"longBreak\",children:\"Long Break (minutes):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"longBreak\",name:\"longBreak\",min:\"1\",max:\"60\",value:sessionSetting.longBreak,onChange:handleSettingChange,disabled:isRunning})]})]})]})]});};export default PomodoroTimer;","map":{"version":3,"names":["React","useState","useEffect","createPomodoroSession","getPomodoroSessions","jsx","_jsx","jsxs","_jsxs","PomodoroTimer","timeLeft","setTimeLeft","isRunning","setIsRunning","isBreak","setIsBreak","sessions","setSessions","completedSessions","setCompletedSessions","sessionSetting","setSessionSetting","pomodoro","shortBreak","longBreak","fetchCompletedSessions","length","error","console","timer","setInterval","prev","handleTimerComplete","clearInterval","duration","type","completedAt","Date","toggleTimer","resetTimer","formatTime","seconds","mins","Math","floor","secs","toString","padStart","handleSettingChange","e","name","value","target","parseInt","totalPomodoroTime","filter","session","reduce","total","todayCompletedPomodoros","sessionDate","today","getDate","getMonth","getFullYear","className","children","onClick","htmlFor","id","min","max","onChange","disabled"],"sources":["C:/Users/wwjie/time-blocking-app/frontend/src/components/Pomodoro/PomodoroTimer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PomodoroTimer.css';\r\nimport { createPomodoroSession, getPomodoroSessions } from '../../utils/api';\r\n\r\nconst PomodoroTimer = () => {\r\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes in seconds\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isBreak, setIsBreak] = useState(false);\r\n  const [sessions, setSessions] = useState(0);\r\n  const [completedSessions, setCompletedSessions] = useState([]);\r\n  const [sessionSetting, setSessionSetting] = useState({\r\n    pomodoro: 25,\r\n    shortBreak: 5,\r\n    longBreak: 15,\r\n  });\r\n\r\n  // Load previously completed sessions\r\n  useEffect(() => {\r\n    fetchCompletedSessions();\r\n  }, []);\r\n\r\n  const fetchCompletedSessions = async () => {\r\n    try {\r\n      const sessions = await getPomodoroSessions();\r\n      setCompletedSessions(sessions);\r\n      // Update sessions based on completed sessions\r\n      if (sessions.length > 0) {\r\n        setSessions(sessions.length);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching pomodoro sessions:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft(prev => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      handleTimerComplete();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft]);\r\n\r\n  const handleTimerComplete = async () => {\r\n    setIsRunning(false);\r\n    if (!isBreak) {\r\n      setSessions(prev => prev + 1);\r\n      try {\r\n        await createPomodoroSession({\r\n          duration: 25,\r\n          type: 'pomodoro',\r\n          completedAt: new Date()\r\n        });\r\n      } catch (error) {\r\n        console.error('Error saving pomodoro session:', error);\r\n      }\r\n    }\r\n    setIsBreak(!isBreak);\r\n    setTimeLeft(isBreak ? 25 * 60 : 5 * 60);\r\n  };\r\n\r\n  const toggleTimer = () => {\r\n    setIsRunning(!isRunning);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setIsRunning(false);\r\n    setIsBreak(false);\r\n    setTimeLeft(25 * 60);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const handleSettingChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSessionSetting({\r\n      ...sessionSetting,\r\n      [name]: parseInt(value, 10),\r\n    });\r\n\r\n    // Update current timer if matching the current mode\r\n    if (name === 'pomodoro' && !isRunning) {\r\n      setTimeLeft(parseInt(value, 10) * 60);\r\n    }\r\n  };\r\n\r\n  // Calculate statistics\r\n  const totalPomodoroTime = completedSessions\r\n    .filter(session => session.type === 'pomodoro')\r\n    .reduce((total, session) => total + session.duration, 0);\r\n\r\n  const todayCompletedPomodoros = completedSessions\r\n    .filter(session => {\r\n      const sessionDate = new Date(session.completedAt);\r\n      const today = new Date();\r\n      return session.type === 'pomodoro' && \r\n        sessionDate.getDate() === today.getDate() &&\r\n        sessionDate.getMonth() === today.getMonth() &&\r\n        sessionDate.getFullYear() === today.getFullYear();\r\n    }).length;\r\n\r\n  return (\r\n    <div className=\"pomodoro-timer\">\r\n      <h2>Pomodoro Timer</h2>\r\n      <div className=\"timer-display\">\r\n        <div className=\"time\">{formatTime(timeLeft)}</div>\r\n        <div className=\"timer-label\">{isBreak ? 'Break Time' : 'Focus Time'}</div>\r\n      </div>\r\n      <div className=\"timer-controls\">\r\n        <button onClick={toggleTimer}>\r\n          {isRunning ? 'Pause' : 'Start'}\r\n        </button>\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n      <div className=\"session-info\">\r\n        <p>Completed Sessions: {sessions}</p>\r\n        <p>Today's completed pomodoros: {todayCompletedPomodoros}</p>\r\n        <p>Total focus time: {Math.floor(totalPomodoroTime / 60)} hours {totalPomodoroTime % 60} minutes</p>\r\n      </div>\r\n      <div className=\"timer-settings\">\r\n        <h3>Timer Settings</h3>\r\n        <div className=\"settings-form\">\r\n          <div>\r\n            <label htmlFor=\"pomodoro\">Pomodoro (minutes):</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"pomodoro\"\r\n              name=\"pomodoro\"\r\n              min=\"1\"\r\n              max=\"60\"\r\n              value={sessionSetting.pomodoro}\r\n              onChange={handleSettingChange}\r\n              disabled={isRunning}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"shortBreak\">Short Break (minutes):</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"shortBreak\"\r\n              name=\"shortBreak\"\r\n              min=\"1\"\r\n              max=\"30\"\r\n              value={sessionSetting.shortBreak}\r\n              onChange={handleSettingChange}\r\n              disabled={isRunning}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"longBreak\">Long Break (minutes):</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"longBreak\"\r\n              name=\"longBreak\"\r\n              min=\"1\"\r\n              max=\"60\"\r\n              value={sessionSetting.longBreak}\r\n              onChange={handleSettingChange}\r\n              disabled={isRunning}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PomodoroTimer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}