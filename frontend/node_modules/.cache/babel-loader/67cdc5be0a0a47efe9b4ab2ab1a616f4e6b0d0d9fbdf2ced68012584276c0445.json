{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwjie\\\\time-blocking-app\\\\frontend\\\\src\\\\components\\\\TimeBlocking\\\\TimeBlockingCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TimeBlocking.css';\nimport { getTimeBlocks, createTimeBlock, updateTimeBlock, deleteTimeBlock } from '../../utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimeBlockingCalendar = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [view, setView] = useState('week'); // 'day', 'week', 'month'\n  const [blocks, setBlocks] = useState([]);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [selectedTimeRange, setSelectedTimeRange] = useState({\n    startTime: '',\n    endTime: ''\n  });\n  const [newBlock, setNewBlock] = useState({\n    startTime: '',\n    endTime: '',\n    title: '',\n    description: '',\n    category: 'academic',\n    priority: 'high',\n    isRecurring: false,\n    recurringType: 'none',\n    // 'none', 'daily', 'weekly', 'monthly'\n    recurringEndDate: ''\n  });\n  const categories = {\n    academic: {\n      label: 'Academic',\n      color: '#4285F4'\n    },\n    personal: {\n      label: 'Personal',\n      color: '#0F9D58'\n    },\n    work: {\n      label: 'Work',\n      color: '#DB4437'\n    },\n    project: {\n      label: 'Project',\n      color: '#F4B400'\n    }\n  };\n  const priorities = {\n    high: {\n      label: 'High Priority',\n      color: '#ff4444'\n    },\n    medium: {\n      label: 'Medium Priority',\n      color: '#ffbb33'\n    },\n    low: {\n      label: 'Low Priority',\n      color: '#00c851'\n    }\n  };\n  const recurringTypes = [{\n    value: 'none',\n    label: 'Not recurring'\n  }, {\n    value: 'daily',\n    label: 'Daily'\n  }, {\n    value: 'weekly',\n    label: 'Weekly'\n  }, {\n    value: 'monthly',\n    label: 'Monthly'\n  }];\n  useEffect(() => {\n    loadTimeBlocks();\n  }, [selectedDate]);\n  const loadTimeBlocks = async () => {\n    try {\n      const blocks = await getTimeBlocks();\n      setBlocks(blocks);\n    } catch (error) {\n      console.error('Error loading time blocks:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const blockData = {\n        ...newBlock,\n        date: selectedDate.toISOString().split('T')[0],\n        startTime: selectedTimeRange.startTime,\n        endTime: selectedTimeRange.endTime\n      };\n      await createTimeBlock(blockData);\n      setShowAddForm(false);\n      setNewBlock({\n        startTime: '',\n        endTime: '',\n        title: '',\n        description: '',\n        category: 'academic',\n        priority: 'high',\n        isRecurring: false,\n        recurringType: 'none',\n        recurringEndDate: ''\n      });\n      setSelectedTimeRange({\n        startTime: '',\n        endTime: ''\n      });\n      loadTimeBlocks();\n    } catch (error) {\n      console.error('Error creating time block:', error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteTimeBlock(id);\n      loadTimeBlocks();\n    } catch (error) {\n      console.error('Error deleting time block:', error);\n    }\n  };\n  const generateTimeSlots = () => {\n    const slots = [];\n    for (let i = 0; i < 24; i++) {\n      const hour = i.toString().padStart(2, '0');\n      slots.push(`${hour}:00`);\n      slots.push(`${hour}:30`);\n    }\n    return slots;\n  };\n  const timeSlots = generateTimeSlots();\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const formatMonthYear = date => {\n    return date.toLocaleDateString('en-US', {\n      month: 'long',\n      year: 'numeric'\n    });\n  };\n  const getDaysInWeek = () => {\n    const days = [];\n    const currentDate = new Date(selectedDate);\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n    for (let i = 0; i < 7; i++) {\n      const newDate = new Date(currentDate);\n      newDate.setDate(currentDate.getDate() + i);\n      days.push(newDate);\n    }\n    return days;\n  };\n  const getDaysInMonth = date => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const days = [];\n\n    // Add padding days from previous month\n    const firstDayOfWeek = firstDay.getDay();\n    for (let i = 0; i < firstDayOfWeek; i++) {\n      const prevDate = new Date(year, month, -i);\n      days.unshift(prevDate);\n    }\n\n    // Add days of current month\n    for (let i = 1; i <= lastDay.getDate(); i++) {\n      days.push(new Date(year, month, i));\n    }\n\n    // Add padding days from next month to complete the grid\n    const remainingDays = 42 - days.length; // 6 rows of 7 days\n    for (let i = 1; i <= remainingDays; i++) {\n      days.push(new Date(year, month + 1, i));\n    }\n    return days;\n  };\n  const getBlocksForDateAndTime = (date, timeSlot) => {\n    return blocks.filter(block => {\n      const blockDate = new Date(block.date);\n      return blockDate.getDate() === date.getDate() && blockDate.getMonth() === date.getMonth() && blockDate.getFullYear() === date.getFullYear() && block.startTime <= timeSlot && block.endTime > timeSlot;\n    });\n  };\n  const getBlocksForDay = date => {\n    return blocks.filter(block => {\n      const blockDate = new Date(block.date);\n      return blockDate.getDate() === date.getDate() && blockDate.getMonth() === date.getMonth() && blockDate.getFullYear() === date.getFullYear();\n    });\n  };\n  const getBlocksForDayView = () => {\n    return getBlocksForDay(selectedDate);\n  };\n  const isToday = date => {\n    const today = new Date();\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n  const isCurrentMonth = date => {\n    return date.getMonth() === selectedDate.getMonth();\n  };\n  const isSelected = date => {\n    return date.getDate() === selectedDate.getDate() && date.getMonth() === selectedDate.getMonth() && date.getFullYear() === selectedDate.getFullYear();\n  };\n  const handleTimeSlotClick = (date, startTime) => {\n    setSelectedDate(date);\n    setSelectedTimeRange(prev => ({\n      startTime: startTime,\n      endTime: prev.endTime || startTime\n    }));\n    setShowAddForm(true);\n  };\n  const handleDateClick = date => {\n    setSelectedDate(date);\n  };\n  const navigate = direction => {\n    const newDate = new Date(selectedDate);\n    if (view === 'day') {\n      newDate.setDate(newDate.getDate() + direction);\n    } else if (view === 'week') {\n      newDate.setDate(newDate.getDate() + 7 * direction);\n    } else if (view === 'month') {\n      newDate.setMonth(newDate.getMonth() + direction);\n    }\n    setSelectedDate(newDate);\n  };\n  const renderDayView = () => {\n    const dayBlocks = getBlocksForDayView();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid day-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slots-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slot-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slot-label\",\n          children: slot\n        }, slot, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-column full-width\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-name\",\n            children: selectedDate.toLocaleDateString('en-US', {\n              weekday: 'long'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-date\",\n            children: selectedDate.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), timeSlots.map((slot, slotIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slot\",\n          onClick: () => handleTimeSlotClick(selectedDate, slot),\n          children: getBlocksForDateAndTime(selectedDate, slot).map((block, index) => {\n            var _categories$block$cat, _priorities$block$pri;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-block\",\n              style: {\n                backgroundColor: ((_categories$block$cat = categories[block.category]) === null || _categories$block$cat === void 0 ? void 0 : _categories$block$cat.color) || '#4285F4',\n                borderLeft: `4px solid ${((_priorities$block$pri = priorities[block.priority]) === null || _priorities$block$pri === void 0 ? void 0 : _priorities$block$pri.color) || '#ff4444'}`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-title\",\n                children: block.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-time\",\n                children: [block.startTime, \" - \", block.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDelete(block.id);\n                },\n                className: \"delete-block\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this);\n          })\n        }, slotIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  };\n  const renderWeekView = () => {\n    const weekDays = getDaysInWeek();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid week-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slots-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slot-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slot-label\",\n          children: slot\n        }, slot, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), weekDays.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day-column ${isToday(day) ? 'today' : ''} ${isSelected(day) ? 'selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-header\",\n          onClick: () => handleDateClick(day),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-name\",\n            children: day.toLocaleDateString('en-US', {\n              weekday: 'short'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-date\",\n            children: day.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), timeSlots.map((slot, slotIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slot\",\n          onClick: () => handleTimeSlotClick(day, slot),\n          children: getBlocksForDateAndTime(day, slot).map((block, index) => {\n            var _categories$block$cat2, _priorities$block$pri2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-block\",\n              style: {\n                backgroundColor: ((_categories$block$cat2 = categories[block.category]) === null || _categories$block$cat2 === void 0 ? void 0 : _categories$block$cat2.color) || '#4285F4',\n                borderLeft: `4px solid ${((_priorities$block$pri2 = priorities[block.priority]) === null || _priorities$block$pri2 === void 0 ? void 0 : _priorities$block$pri2.color) || '#ff4444'}`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-title\",\n                children: block.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-time\",\n                children: [block.startTime, \" - \", block.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDelete(block.id);\n                },\n                className: \"delete-block\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this);\n          })\n        }, `${dayIndex}-${slotIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this))]\n      }, dayIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMonthView = () => {\n    const days = getDaysInMonth(selectedDate);\n    const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid month-view\",\n      children: [weekDays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekday-header\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this)), days.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-day ${isToday(date) ? 'today' : ''} ${isSelected(date) ? 'selected' : ''} ${!isCurrentMonth(date) ? 'other-month' : ''}`,\n        onClick: () => handleDateClick(date),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"day-number\",\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-blocks\",\n          children: [getBlocksForDay(date).slice(0, 3).map((block, i) => {\n            var _categories$block$cat3, _priorities$block$pri3;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-block-month\",\n              style: {\n                backgroundColor: ((_categories$block$cat3 = categories[block.category]) === null || _categories$block$cat3 === void 0 ? void 0 : _categories$block$cat3.color) || '#4285F4',\n                borderLeft: `4px solid ${((_priorities$block$pri3 = priorities[block.priority]) === null || _priorities$block$pri3 === void 0 ? void 0 : _priorities$block$pri3.color) || '#ff4444'}`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block-time-month\",\n                children: block.startTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block-title-month\",\n                children: block.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this);\n          }), getBlocksForDay(date).length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more-blocks\",\n            children: [\"+\", getBlocksForDay(date).length - 3, \" more\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-block-button\",\n          onClick: e => {\n            e.stopPropagation();\n            setSelectedDate(date);\n            setShowAddForm(true);\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this);\n  };\n  const renderView = () => {\n    switch (view) {\n      case 'day':\n        return renderDayView();\n      case 'week':\n        return renderWeekView();\n      case 'month':\n        return renderMonthView();\n      default:\n        return renderWeekView();\n    }\n  };\n  const getNavButtonText = () => {\n    switch (view) {\n      case 'day':\n        return {\n          prev: 'Previous Day',\n          next: 'Next Day'\n        };\n      case 'week':\n        return {\n          prev: 'Previous Week',\n          next: 'Next Week'\n        };\n      case 'month':\n        return {\n          prev: 'Previous Month',\n          next: 'Next Month'\n        };\n      default:\n        return {\n          prev: 'Previous',\n          next: 'Next'\n        };\n    }\n  };\n  const getHeaderText = () => {\n    switch (view) {\n      case 'day':\n        return formatDate(selectedDate);\n      case 'week':\n        const weekDays = getDaysInWeek();\n        const startDate = weekDays[0].toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        });\n        const endDate = weekDays[6].toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric',\n          year: 'numeric'\n        });\n        return `${startDate} - ${endDate}`;\n      case 'month':\n        return formatMonthYear(selectedDate);\n      default:\n        return formatDate(selectedDate);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-blocking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: getHeaderText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: view === 'day' ? 'active' : '',\n          onClick: () => setView('day'),\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: view === 'week' ? 'active' : '',\n          onClick: () => setView('week'),\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: view === 'month' ? 'active' : '',\n          onClick: () => setView('month'),\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(-1),\n          children: getNavButtonText().prev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedDate(new Date()),\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(1),\n          children: getNavButtonText().next\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), renderView(), showAddForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-block-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Time Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: selectedDate.toISOString().split('T')[0],\n            onChange: e => {\n              const newDate = new Date(e.target.value);\n              setSelectedDate(newDate);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-range-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedTimeRange.startTime,\n              onChange: e => setSelectedTimeRange(prev => ({\n                ...prev,\n                startTime: e.target.value\n              })),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this), timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: slot,\n                children: slot\n              }, slot, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedTimeRange.endTime,\n              onChange: e => setSelectedTimeRange(prev => ({\n                ...prev,\n                endTime: e.target.value\n              })),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this), timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: slot,\n                children: slot\n              }, slot, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newBlock.title,\n            onChange: e => setNewBlock(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newBlock.description,\n            onChange: e => setNewBlock(prev => ({\n              ...prev,\n              description: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newBlock.category,\n            onChange: e => setNewBlock(prev => ({\n              ...prev,\n              category: e.target.value\n            })),\n            required: true,\n            children: Object.entries(categories).map(([key, {\n              label\n            }]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: label\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newBlock.priority,\n            onChange: e => setNewBlock(prev => ({\n              ...prev,\n              priority: e.target.value\n            })),\n            required: true,\n            children: Object.entries(priorities).map(([key, {\n              label\n            }]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: label\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group recurring-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: newBlock.isRecurring,\n              onChange: e => setNewBlock(prev => ({\n                ...prev,\n                isRecurring: e.target.checked,\n                recurringType: e.target.checked ? 'daily' : 'none'\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), \"Recurring Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this), newBlock.isRecurring && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recurring-options\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recurrence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newBlock.recurringType,\n                onChange: e => setNewBlock(prev => ({\n                  ...prev,\n                  recurringType: e.target.value\n                })),\n                children: recurringTypes.slice(1).map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: type.value,\n                  children: type.label\n                }, type.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recurring-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: newBlock.recurringEndDate,\n                onChange: e => setNewBlock(prev => ({\n                  ...prev,\n                  recurringEndDate: e.target.value\n                })),\n                min: new Date().toISOString().split('T')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowAddForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeBlockingCalendar, \"akdyejXjhZ5Bw99H964YHuaFkcQ=\");\n_c = TimeBlockingCalendar;\nexport default TimeBlockingCalendar;\nvar _c;\n$RefreshReg$(_c, \"TimeBlockingCalendar\");","map":{"version":3,"names":["React","useState","useEffect","getTimeBlocks","createTimeBlock","updateTimeBlock","deleteTimeBlock","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeBlockingCalendar","_s","selectedDate","setSelectedDate","Date","view","setView","blocks","setBlocks","showAddForm","setShowAddForm","selectedTimeRange","setSelectedTimeRange","startTime","endTime","newBlock","setNewBlock","title","description","category","priority","isRecurring","recurringType","recurringEndDate","categories","academic","label","color","personal","work","project","priorities","high","medium","low","recurringTypes","value","loadTimeBlocks","error","console","handleSubmit","e","preventDefault","blockData","date","toISOString","split","handleDelete","id","generateTimeSlots","slots","i","hour","toString","padStart","push","timeSlots","formatDate","toLocaleDateString","weekday","year","month","day","formatMonthYear","getDaysInWeek","days","currentDate","setDate","getDate","getDay","newDate","getDaysInMonth","getFullYear","getMonth","firstDay","lastDay","firstDayOfWeek","prevDate","unshift","remainingDays","length","getBlocksForDateAndTime","timeSlot","filter","block","blockDate","getBlocksForDay","getBlocksForDayView","isToday","today","isCurrentMonth","isSelected","handleTimeSlotClick","prev","handleDateClick","navigate","direction","setMonth","renderDayView","dayBlocks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","slot","slotIndex","onClick","index","_categories$block$cat","_priorities$block$pri","style","backgroundColor","borderLeft","stopPropagation","renderWeekView","weekDays","dayIndex","_categories$block$cat2","_priorities$block$pri2","renderMonthView","slice","_categories$block$cat3","_priorities$block$pri3","renderView","getNavButtonText","next","getHeaderText","startDate","endDate","onSubmit","type","onChange","target","required","Object","entries","key","checked","min","_c","$RefreshReg$"],"sources":["C:/Users/wwjie/time-blocking-app/frontend/src/components/TimeBlocking/TimeBlockingCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TimeBlocking.css';\r\nimport { getTimeBlocks, createTimeBlock, updateTimeBlock, deleteTimeBlock } from '../../utils/api';\r\n\r\nconst TimeBlockingCalendar = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [view, setView] = useState('week'); // 'day', 'week', 'month'\r\n  const [blocks, setBlocks] = useState([]);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [selectedTimeRange, setSelectedTimeRange] = useState({\r\n    startTime: '',\r\n    endTime: ''\r\n  });\r\n  const [newBlock, setNewBlock] = useState({\r\n    startTime: '',\r\n    endTime: '',\r\n    title: '',\r\n    description: '',\r\n    category: 'academic',\r\n    priority: 'high',\r\n    isRecurring: false,\r\n    recurringType: 'none', // 'none', 'daily', 'weekly', 'monthly'\r\n    recurringEndDate: ''\r\n  });\r\n\r\n  const categories = {\r\n    academic: { label: 'Academic', color: '#4285F4' },\r\n    personal: { label: 'Personal', color: '#0F9D58' },\r\n    work: { label: 'Work', color: '#DB4437' },\r\n    project: { label: 'Project', color: '#F4B400' }\r\n  };\r\n\r\n  const priorities = {\r\n    high: { label: 'High Priority', color: '#ff4444' },\r\n    medium: { label: 'Medium Priority', color: '#ffbb33' },\r\n    low: { label: 'Low Priority', color: '#00c851' }\r\n  };\r\n\r\n  const recurringTypes = [\r\n    { value: 'none', label: 'Not recurring' },\r\n    { value: 'daily', label: 'Daily' },\r\n    { value: 'weekly', label: 'Weekly' },\r\n    { value: 'monthly', label: 'Monthly' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadTimeBlocks();\r\n  }, [selectedDate]);\r\n\r\n  const loadTimeBlocks = async () => {\r\n    try {\r\n      const blocks = await getTimeBlocks();\r\n      setBlocks(blocks);\r\n    } catch (error) {\r\n      console.error('Error loading time blocks:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const blockData = {\r\n        ...newBlock,\r\n        date: selectedDate.toISOString().split('T')[0],\r\n        startTime: selectedTimeRange.startTime,\r\n        endTime: selectedTimeRange.endTime\r\n      };\r\n      \r\n      await createTimeBlock(blockData);\r\n      setShowAddForm(false);\r\n      setNewBlock({\r\n        startTime: '',\r\n        endTime: '',\r\n        title: '',\r\n        description: '',\r\n        category: 'academic',\r\n        priority: 'high',\r\n        isRecurring: false,\r\n        recurringType: 'none',\r\n        recurringEndDate: ''\r\n      });\r\n      setSelectedTimeRange({ startTime: '', endTime: '' });\r\n      loadTimeBlocks();\r\n    } catch (error) {\r\n      console.error('Error creating time block:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteTimeBlock(id);\r\n      loadTimeBlocks();\r\n    } catch (error) {\r\n      console.error('Error deleting time block:', error);\r\n    }\r\n  };\r\n\r\n  const generateTimeSlots = () => {\r\n    const slots = [];\r\n    for (let i = 0; i < 24; i++) {\r\n      const hour = i.toString().padStart(2, '0');\r\n      slots.push(`${hour}:00`);\r\n      slots.push(`${hour}:30`);\r\n    }\r\n    return slots;\r\n  };\r\n\r\n  const timeSlots = generateTimeSlots();\r\n\r\n  const formatDate = (date) => {\r\n    return date.toLocaleDateString('en-US', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatMonthYear = (date) => {\r\n    return date.toLocaleDateString('en-US', {\r\n      month: 'long',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const getDaysInWeek = () => {\r\n    const days = [];\r\n    const currentDate = new Date(selectedDate);\r\n    currentDate.setDate(currentDate.getDate() - currentDate.getDay());\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      const newDate = new Date(currentDate);\r\n      newDate.setDate(currentDate.getDate() + i);\r\n      days.push(newDate);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  const getDaysInMonth = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const firstDay = new Date(year, month, 1);\r\n    const lastDay = new Date(year, month + 1, 0);\r\n    const days = [];\r\n\r\n    // Add padding days from previous month\r\n    const firstDayOfWeek = firstDay.getDay();\r\n    for (let i = 0; i < firstDayOfWeek; i++) {\r\n      const prevDate = new Date(year, month, -i);\r\n      days.unshift(prevDate);\r\n    }\r\n\r\n    // Add days of current month\r\n    for (let i = 1; i <= lastDay.getDate(); i++) {\r\n      days.push(new Date(year, month, i));\r\n    }\r\n\r\n    // Add padding days from next month to complete the grid\r\n    const remainingDays = 42 - days.length; // 6 rows of 7 days\r\n    for (let i = 1; i <= remainingDays; i++) {\r\n      days.push(new Date(year, month + 1, i));\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  const getBlocksForDateAndTime = (date, timeSlot) => {\r\n    return blocks.filter(block => {\r\n      const blockDate = new Date(block.date);\r\n      return blockDate.getDate() === date.getDate() &&\r\n        blockDate.getMonth() === date.getMonth() &&\r\n        blockDate.getFullYear() === date.getFullYear() &&\r\n        block.startTime <= timeSlot &&\r\n        block.endTime > timeSlot;\r\n    });\r\n  };\r\n\r\n  const getBlocksForDay = (date) => {\r\n    return blocks.filter(block => {\r\n      const blockDate = new Date(block.date);\r\n      return blockDate.getDate() === date.getDate() &&\r\n        blockDate.getMonth() === date.getMonth() &&\r\n        blockDate.getFullYear() === date.getFullYear();\r\n    });\r\n  };\r\n\r\n  const getBlocksForDayView = () => {\r\n    return getBlocksForDay(selectedDate);\r\n  };\r\n\r\n  const isToday = (date) => {\r\n    const today = new Date();\r\n    return date.getDate() === today.getDate() &&\r\n      date.getMonth() === today.getMonth() &&\r\n      date.getFullYear() === today.getFullYear();\r\n  };\r\n\r\n  const isCurrentMonth = (date) => {\r\n    return date.getMonth() === selectedDate.getMonth();\r\n  };\r\n\r\n  const isSelected = (date) => {\r\n    return date.getDate() === selectedDate.getDate() &&\r\n      date.getMonth() === selectedDate.getMonth() &&\r\n      date.getFullYear() === selectedDate.getFullYear();\r\n  };\r\n\r\n  const handleTimeSlotClick = (date, startTime) => {\r\n    setSelectedDate(date);\r\n    setSelectedTimeRange(prev => ({\r\n      startTime: startTime,\r\n      endTime: prev.endTime || startTime\r\n    }));\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  const handleDateClick = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const navigate = (direction) => {\r\n    const newDate = new Date(selectedDate);\r\n    \r\n    if (view === 'day') {\r\n      newDate.setDate(newDate.getDate() + direction);\r\n    } else if (view === 'week') {\r\n      newDate.setDate(newDate.getDate() + (7 * direction));\r\n    } else if (view === 'month') {\r\n      newDate.setMonth(newDate.getMonth() + direction);\r\n    }\r\n    \r\n    setSelectedDate(newDate);\r\n  };\r\n\r\n  const renderDayView = () => {\r\n    const dayBlocks = getBlocksForDayView();\r\n    \r\n    return (\r\n      <div className=\"calendar-grid day-view\">\r\n        <div className=\"time-slots-column\">\r\n          <div className=\"time-slot-header\"></div>\r\n          {timeSlots.map(slot => (\r\n            <div key={slot} className=\"time-slot-label\">{slot}</div>\r\n          ))}\r\n        </div>\r\n        <div className=\"day-column full-width\">\r\n          <div className=\"day-header\">\r\n            <div className=\"day-name\">{selectedDate.toLocaleDateString('en-US', { weekday: 'long' })}</div>\r\n            <div className=\"day-date\">{selectedDate.getDate()}</div>\r\n          </div>\r\n          {timeSlots.map((slot, slotIndex) => (\r\n            <div\r\n              key={slotIndex}\r\n              className=\"time-slot\"\r\n              onClick={() => handleTimeSlotClick(selectedDate, slot)}\r\n            >\r\n              {getBlocksForDateAndTime(selectedDate, slot).map((block, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"time-block\"\r\n                  style={{\r\n                    backgroundColor: categories[block.category]?.color || '#4285F4',\r\n                    borderLeft: `4px solid ${priorities[block.priority]?.color || '#ff4444'}`\r\n                  }}\r\n                >\r\n                  <div className=\"block-title\">{block.title}</div>\r\n                  <div className=\"block-time\">\r\n                    {block.startTime} - {block.endTime}\r\n                  </div>\r\n                  <button \r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDelete(block.id);\r\n                    }} \r\n                    className=\"delete-block\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderWeekView = () => {\r\n    const weekDays = getDaysInWeek();\r\n\r\n    return (\r\n      <div className=\"calendar-grid week-view\">\r\n        <div className=\"time-slots-column\">\r\n          <div className=\"time-slot-header\"></div>\r\n          {timeSlots.map(slot => (\r\n            <div key={slot} className=\"time-slot-label\">{slot}</div>\r\n          ))}\r\n        </div>\r\n        {weekDays.map((day, dayIndex) => (\r\n          <div \r\n            key={dayIndex} \r\n            className={`day-column ${isToday(day) ? 'today' : ''} ${isSelected(day) ? 'selected' : ''}`}\r\n          >\r\n            <div className=\"day-header\" onClick={() => handleDateClick(day)}>\r\n              <div className=\"day-name\">{day.toLocaleDateString('en-US', { weekday: 'short' })}</div>\r\n              <div className=\"day-date\">{day.getDate()}</div>\r\n            </div>\r\n            {timeSlots.map((slot, slotIndex) => (\r\n              <div\r\n                key={`${dayIndex}-${slotIndex}`}\r\n                className=\"time-slot\"\r\n                onClick={() => handleTimeSlotClick(day, slot)}\r\n              >\r\n                {getBlocksForDateAndTime(day, slot).map((block, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"time-block\"\r\n                    style={{\r\n                      backgroundColor: categories[block.category]?.color || '#4285F4',\r\n                      borderLeft: `4px solid ${priorities[block.priority]?.color || '#ff4444'}`\r\n                    }}\r\n                  >\r\n                    <div className=\"block-title\">{block.title}</div>\r\n                    <div className=\"block-time\">\r\n                      {block.startTime} - {block.endTime}\r\n                    </div>\r\n                    <button \r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleDelete(block.id);\r\n                      }} \r\n                      className=\"delete-block\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderMonthView = () => {\r\n    const days = getDaysInMonth(selectedDate);\r\n    const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n    return (\r\n      <div className=\"calendar-grid month-view\">\r\n        {weekDays.map(day => (\r\n          <div key={day} className=\"weekday-header\">{day}</div>\r\n        ))}\r\n        {days.map((date, index) => (\r\n          <div\r\n            key={index}\r\n            className={`calendar-day ${isToday(date) ? 'today' : ''} ${isSelected(date) ? 'selected' : ''} ${!isCurrentMonth(date) ? 'other-month' : ''}`}\r\n            onClick={() => handleDateClick(date)}\r\n          >\r\n            <div className=\"day-header\">\r\n              <span className=\"day-number\">{date.getDate()}</span>\r\n            </div>\r\n            <div className=\"day-blocks\">\r\n              {getBlocksForDay(date).slice(0, 3).map((block, i) => (\r\n                <div \r\n                  key={i} \r\n                  className=\"time-block-month\" \r\n                  style={{ \r\n                    backgroundColor: categories[block.category]?.color || '#4285F4',\r\n                    borderLeft: `4px solid ${priorities[block.priority]?.color || '#ff4444'}`\r\n                  }}\r\n                >\r\n                  <span className=\"block-time-month\">{block.startTime}</span>\r\n                  <span className=\"block-title-month\">{block.title}</span>\r\n                </div>\r\n              ))}\r\n              {getBlocksForDay(date).length > 3 && (\r\n                <div className=\"more-blocks\">+{getBlocksForDay(date).length - 3} more</div>\r\n              )}\r\n            </div>\r\n            <button\r\n              className=\"add-block-button\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelectedDate(date);\r\n                setShowAddForm(true);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderView = () => {\r\n    switch (view) {\r\n      case 'day':\r\n        return renderDayView();\r\n      case 'week':\r\n        return renderWeekView();\r\n      case 'month':\r\n        return renderMonthView();\r\n      default:\r\n        return renderWeekView();\r\n    }\r\n  };\r\n\r\n  const getNavButtonText = () => {\r\n    switch (view) {\r\n      case 'day':\r\n        return { prev: 'Previous Day', next: 'Next Day' };\r\n      case 'week':\r\n        return { prev: 'Previous Week', next: 'Next Week' };\r\n      case 'month':\r\n        return { prev: 'Previous Month', next: 'Next Month' };\r\n      default:\r\n        return { prev: 'Previous', next: 'Next' };\r\n    }\r\n  };\r\n\r\n  const getHeaderText = () => {\r\n    switch (view) {\r\n      case 'day':\r\n        return formatDate(selectedDate);\r\n      case 'week':\r\n        const weekDays = getDaysInWeek();\r\n        const startDate = weekDays[0].toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n        const endDate = weekDays[6].toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n        return `${startDate} - ${endDate}`;\r\n      case 'month':\r\n        return formatMonthYear(selectedDate);\r\n      default:\r\n        return formatDate(selectedDate);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"time-blocking-container\">\r\n      <div className=\"calendar-header\">\r\n        <h2>{getHeaderText()}</h2>\r\n        <div className=\"view-controls\">\r\n          <button \r\n            className={view === 'day' ? 'active' : ''} \r\n            onClick={() => setView('day')}\r\n          >\r\n            Day\r\n          </button>\r\n          <button \r\n            className={view === 'week' ? 'active' : ''} \r\n            onClick={() => setView('week')}\r\n          >\r\n            Week\r\n          </button>\r\n          <button \r\n            className={view === 'month' ? 'active' : ''} \r\n            onClick={() => setView('month')}\r\n          >\r\n            Month\r\n          </button>\r\n        </div>\r\n        <div className=\"calendar-controls\">\r\n          <button onClick={() => navigate(-1)}>\r\n            {getNavButtonText().prev}\r\n          </button>\r\n          <button onClick={() => setSelectedDate(new Date())}>\r\n            Today\r\n          </button>\r\n          <button onClick={() => navigate(1)}>\r\n            {getNavButtonText().next}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {renderView()}\r\n\r\n      {showAddForm && (\r\n        <div className=\"add-block-form\">\r\n          <h3>Add New Time Block</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Date</label>\r\n              <input \r\n                type=\"date\" \r\n                value={selectedDate.toISOString().split('T')[0]} \r\n                onChange={(e) => {\r\n                  const newDate = new Date(e.target.value);\r\n                  setSelectedDate(newDate);\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Time Range</label>\r\n              <div className=\"time-range-inputs\">\r\n                <select\r\n                  value={selectedTimeRange.startTime}\r\n                  onChange={(e) => setSelectedTimeRange(prev => ({ ...prev, startTime: e.target.value }))}\r\n                  required\r\n                >\r\n                  <option value=\"\">Start Time</option>\r\n                  {timeSlots.map(slot => (\r\n                    <option key={slot} value={slot}>{slot}</option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  value={selectedTimeRange.endTime}\r\n                  onChange={(e) => setSelectedTimeRange(prev => ({ ...prev, endTime: e.target.value }))}\r\n                  required\r\n                >\r\n                  <option value=\"\">End Time</option>\r\n                  {timeSlots.map(slot => (\r\n                    <option key={slot} value={slot}>{slot}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Title</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newBlock.title}\r\n                onChange={(e) => setNewBlock(prev => ({ ...prev, title: e.target.value }))}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                value={newBlock.description}\r\n                onChange={(e) => setNewBlock(prev => ({ ...prev, description: e.target.value }))}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                value={newBlock.category}\r\n                onChange={(e) => setNewBlock(prev => ({ ...prev, category: e.target.value }))}\r\n                required\r\n              >\r\n                {Object.entries(categories).map(([key, { label }]) => (\r\n                  <option key={key} value={key}>{label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Priority</label>\r\n              <select\r\n                value={newBlock.priority}\r\n                onChange={(e) => setNewBlock(prev => ({ ...prev, priority: e.target.value }))}\r\n                required\r\n              >\r\n                {Object.entries(priorities).map(([key, { label }]) => (\r\n                  <option key={key} value={key}>{label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group recurring-container\">\r\n              <label className=\"checkbox-label\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  checked={newBlock.isRecurring} \r\n                  onChange={(e) => setNewBlock(prev => ({ \r\n                    ...prev, \r\n                    isRecurring: e.target.checked,\r\n                    recurringType: e.target.checked ? 'daily' : 'none'\r\n                  }))}\r\n                />\r\n                Recurring Task\r\n              </label>\r\n              \r\n              {newBlock.isRecurring && (\r\n                <>\r\n                  <div className=\"recurring-options\">\r\n                    <label>Recurrence</label>\r\n                    <select\r\n                      value={newBlock.recurringType}\r\n                      onChange={(e) => setNewBlock(prev => ({ ...prev, recurringType: e.target.value }))}\r\n                    >\r\n                      {recurringTypes.slice(1).map(type => (\r\n                        <option key={type.value} value={type.value}>{type.label}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"recurring-end\">\r\n                    <label>End Date</label>\r\n                    <input \r\n                      type=\"date\" \r\n                      value={newBlock.recurringEndDate}\r\n                      onChange={(e) => setNewBlock(prev => ({ ...prev, recurringEndDate: e.target.value }))}\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\">Save Block</button>\r\n              <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeBlockingCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}