{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./DailyTaskList.css';import{getTasks,createTask,updateTask,deleteTask}from'../../utils/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DailyTaskList(){const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState({title:'',description:'',estimatedPomodoros:1,completedPomodoros:0,status:'pending'});const[showAddForm,setShowAddForm]=useState(false);const[dailyGoal,setDailyGoal]=useState(4);// Default daily Pomodoro goal\nuseEffect(()=>{loadTasks();},[]);const loadTasks=async()=>{try{const data=await getTasks();setTasks(data);}catch(error){console.error('Error loading tasks:',error);}};const handleSubmit=async e=>{e.preventDefault();try{await createTask(newTask);setNewTask({title:'',description:'',estimatedPomodoros:1,completedPomodoros:0,status:'pending'});setShowAddForm(false);loadTasks();}catch(error){console.error('Error creating task:',error);}};const handleDelete=async id=>{try{await deleteTask(id);loadTasks();}catch(error){console.error('Error deleting task:',error);}};const handlePomodoroComplete=async taskId=>{try{const task=tasks.find(t=>t.id===taskId);if(task){const updatedTask={...task,completedPomodoros:task.completedPomodoros+1,status:task.completedPomodoros+1>=task.estimatedPomodoros?'completed':'in-progress'};await updateTask(taskId,updatedTask);loadTasks();}}catch(error){console.error('Error updating task:',error);}};const getProgressPercentage=task=>{return task.completedPomodoros/task.estimatedPomodoros*100;};const getStatusColor=status=>{switch(status){case'completed':return'#4CAF50';case'in-progress':return'#2196F3';default:return'#9E9E9E';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"daily-task-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-list-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Today's Tasks\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"daily-goal\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Daily Pomodoro Goal:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",value:dailyGoal,onChange:e=>setDailyGoal(parseInt(e.target.value))})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"add-task-button\",onClick:()=>setShowAddForm(true),children:\"+ Add Task\"})]}),showAddForm&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"add-task-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Task Title:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTask.title,onChange:e=>setNewTask({...newTask,title:e.target.value}),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newTask.description,onChange:e=>setNewTask({...newTask,description:e.target.value})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Estimated Pomodoros:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",value:newTask.estimatedPomodoros,onChange:e=>setNewTask({...newTask,estimatedPomodoros:parseInt(e.target.value)}),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Task\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowAddForm(false),children:\"Cancel\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-list-content\",children:tasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-title\",children:[/*#__PURE__*/_jsx(\"h4\",{children:task.title}),/*#__PURE__*/_jsx(\"span\",{className:\"task-status\",style:{backgroundColor:getStatusColor(task.status)},children:task.status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pomodoro-button\",onClick:()=>handlePomodoroComplete(task.id),disabled:task.status==='completed',children:\"Complete Pomodoro\"}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>handleDelete(task.id),children:\"Delete\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"task-description\",children:task.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${getProgressPercentage(task)}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-text\",children:[task.completedPomodoros,\" / \",task.estimatedPomodoros,\" Pomodoros\"]})]})]},task.id))})]});}export default DailyTaskList;","map":{"version":3,"names":["React","useState","useEffect","getTasks","createTask","updateTask","deleteTask","jsx","_jsx","jsxs","_jsxs","DailyTaskList","tasks","setTasks","newTask","setNewTask","title","description","estimatedPomodoros","completedPomodoros","status","showAddForm","setShowAddForm","dailyGoal","setDailyGoal","loadTasks","data","error","console","handleSubmit","e","preventDefault","handleDelete","id","handlePomodoroComplete","taskId","task","find","t","updatedTask","getProgressPercentage","getStatusColor","className","children","type","min","value","onChange","parseInt","target","onClick","onSubmit","required","map","style","backgroundColor","disabled","width"],"sources":["C:/Users/wwjie/time-blocking-app/frontend/src/components/TaskList/DailyTaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './DailyTaskList.css';\r\nimport { getTasks, createTask, updateTask, deleteTask } from '../../utils/api';\r\n\r\nfunction DailyTaskList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({\r\n    title: '',\r\n    description: '',\r\n    estimatedPomodoros: 1,\r\n    completedPomodoros: 0,\r\n    status: 'pending'\r\n  });\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [dailyGoal, setDailyGoal] = useState(4); // Default daily Pomodoro goal\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, []);\r\n\r\n  const loadTasks = async () => {\r\n    try {\r\n      const data = await getTasks();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error('Error loading tasks:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createTask(newTask);\r\n      setNewTask({\r\n        title: '',\r\n        description: '',\r\n        estimatedPomodoros: 1,\r\n        completedPomodoros: 0,\r\n        status: 'pending'\r\n      });\r\n      setShowAddForm(false);\r\n      loadTasks();\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteTask(id);\r\n      loadTasks();\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  const handlePomodoroComplete = async (taskId) => {\r\n    try {\r\n      const task = tasks.find(t => t.id === taskId);\r\n      if (task) {\r\n        const updatedTask = {\r\n          ...task,\r\n          completedPomodoros: task.completedPomodoros + 1,\r\n          status: task.completedPomodoros + 1 >= task.estimatedPomodoros ? 'completed' : 'in-progress'\r\n        };\r\n        await updateTask(taskId, updatedTask);\r\n        loadTasks();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n    }\r\n  };\r\n\r\n  const getProgressPercentage = (task) => {\r\n    return (task.completedPomodoros / task.estimatedPomodoros) * 100;\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return '#4CAF50';\r\n      case 'in-progress':\r\n        return '#2196F3';\r\n      default:\r\n        return '#9E9E9E';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"daily-task-list\">\r\n      <div className=\"task-list-header\">\r\n        <div className=\"header-left\">\r\n          <h3>Today's Tasks</h3>\r\n          <div className=\"daily-goal\">\r\n            <label>Daily Pomodoro Goal:</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={dailyGoal}\r\n              onChange={(e) => setDailyGoal(parseInt(e.target.value))}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button \r\n          className=\"add-task-button\"\r\n          onClick={() => setShowAddForm(true)}\r\n        >\r\n          + Add Task\r\n        </button>\r\n      </div>\r\n\r\n      {showAddForm && (\r\n        <form onSubmit={handleSubmit} className=\"add-task-form\">\r\n          <div className=\"form-group\">\r\n            <label>Task Title:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newTask.title}\r\n              onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <textarea\r\n              value={newTask.description}\r\n              onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Estimated Pomodoros:</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={newTask.estimatedPomodoros}\r\n              onChange={(e) => setNewTask({ ...newTask, estimatedPomodoros: parseInt(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-actions\">\r\n            <button type=\"submit\">Add Task</button>\r\n            <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n\r\n      <div className=\"task-list-content\">\r\n        {tasks.map(task => (\r\n          <div key={task.id} className=\"task-item\">\r\n            <div className=\"task-header\">\r\n              <div className=\"task-title\">\r\n                <h4>{task.title}</h4>\r\n                <span className=\"task-status\" style={{ backgroundColor: getStatusColor(task.status) }}>\r\n                  {task.status}\r\n                </span>\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <button \r\n                  className=\"pomodoro-button\"\r\n                  onClick={() => handlePomodoroComplete(task.id)}\r\n                  disabled={task.status === 'completed'}\r\n                >\r\n                  Complete Pomodoro\r\n                </button>\r\n                <button \r\n                  className=\"delete-button\"\r\n                  onClick={() => handleDelete(task.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p className=\"task-description\">{task.description}</p>\r\n            <div className=\"task-progress\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\"\r\n                  style={{ width: `${getProgressPercentage(task)}%` }}\r\n                />\r\n              </div>\r\n              <div className=\"progress-text\">\r\n                {task.completedPomodoros} / {task.estimatedPomodoros} Pomodoros\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DailyTaskList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}